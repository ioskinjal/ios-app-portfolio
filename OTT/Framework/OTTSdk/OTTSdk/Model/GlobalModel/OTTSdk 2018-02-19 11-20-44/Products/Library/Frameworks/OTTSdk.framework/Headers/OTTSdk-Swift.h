// Generated by Apple Swift version 4.0 effective-3.2 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("OTTSdk")

SWIFT_CLASS("_TtC6OTTSdk3API")
@interface API : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) API * _Nonnull instance;)
+ (API * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk9YuppModel")
@interface YuppModel : NSObject
- (NSString * _Nonnull)getImageUrlWithValue:(id _Nullable)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk8APIError")
@interface APIError : YuppModel
@property (nonatomic, readonly) NSInteger code;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull details;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (APIError * _Nonnull)defaultError SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class NSMutableAttributedString;
@class NSString;

SWIFT_CLASS("_TtC6OTTSdk6APILog")
@interface APILog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull logNotifcation;)
+ (NSNotificationName _Nonnull)logNotifcation SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSMutableAttributedString * _Nonnull attributedTextLog;)
+ (NSMutableAttributedString * _Nonnull)attributedTextLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setAttributedTextLog:(NSMutableAttributedString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSMutableAttributedString * _Nonnull lastApiCallLog;)
+ (NSMutableAttributedString * _Nonnull)lastApiCallLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setLastApiCallLog:(NSMutableAttributedString * _Nonnull)value;
+ (NSString * _Nonnull)defaultHeaders SWIFT_WARN_UNUSED_RESULT;
+ (void)printMessageWithMessage:(id _Nonnull)message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC6OTTSdk13AnalyticsInfo")
@interface AnalyticsInfo : YuppModel <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull contentType;
@property (nonatomic, copy) NSString * _Nonnull dataKey;
@property (nonatomic, copy) NSString * _Nonnull dataType;
@property (nonatomic) int32_t id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end

@class LocationinfoResponse;
@class ConfigResponse;
@class Country;

SWIFT_CLASS("_TtC6OTTSdk10AppManager")
@interface AppManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AppManager * _Nonnull instance;)
+ (AppManager * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
/// This function to know whether this app should be blocked or not
/// \param isSupported Bool
/// <ul>
///   <li>
///     true : allow
///   </li>
///   <li>
///     false : block
///   </li>
/// </ul>
///
///
/// returns:
/// Void
- (void)initiateSdkWithIsSupported:(void (^ _Nonnull)(BOOL))isSupported;
/// UpdateLocation of the User
/// \param onSuccess LocationinfoResponse response
///
/// \param onFailure APIError object
///
///
/// returns:
/// Void
- (void)updateLocationOnSuccess:(void (^ _Nonnull)(LocationinfoResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// New Acces token
/// \param onSuccess new Token
///
/// \param onFailure APIError object
///
///
/// returns:
/// Void
- (void)getTokenOnSuccess:(void (^ _Nonnull)(void))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// configuration : for Tabs and Assests path
/// \param onSuccess new Token
///
/// \param onFailure APIError object
///
///
/// returns:
/// Void
- (void)configurationOnSuccess:(void (^ _Nonnull)(ConfigResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Get countries
/// \param onSuccess Success
///
/// \param countries countries array
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)getCountriesOnSuccess:(void (^ _Nonnull)(NSArray<Country *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk6Banner")
@interface Banner : YuppModel
@property (nonatomic, copy) NSString * _Nonnull subtitle;
@property (nonatomic) BOOL isInternal;
@property (nonatomic, copy) NSString * _Nonnull buttonText;
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic) NSInteger id;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull imageUrl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Banner *> * _Nonnull)bannersWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk6CCData")
@interface CCData : YuppModel
@property (nonatomic, copy) NSString * _Nonnull language;
@property (nonatomic, copy) NSString * _Nonnull filePath;
@property (nonatomic, copy) NSString * _Nonnull fileType;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class Display;

SWIFT_CLASS("_TtC6OTTSdk4Card")
@interface Card : YuppModel
@property (nonatomic, strong) Display * _Nonnull display;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable hover;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Card *> * _Nonnull)cardsWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk12ClientConfig")
@interface ClientConfig : YuppModel
@property (nonatomic) NSInteger bannersPerPageMaxLimit;
@property (nonatomic) NSInteger catchupTvMaxDays;
@property (nonatomic) NSInteger contentLanguagesMaxLimit;
@property (nonatomic) NSInteger displayLanguagesMaxLimit;
@property (nonatomic) NSInteger livetvChannelsMaxLimit;
@property (nonatomic) NSInteger moviesMaxLimit;
@property (nonatomic) NSInteger otpMaxLength;
@property (nonatomic) NSInteger packagesMaxLimit;
@property (nonatomic, copy) NSString * _Nonnull passwordRegex;
@property (nonatomic) NSInteger payPerViewMoviesMaxLimit;
@property (nonatomic, copy) NSString * _Nonnull primaryTimeZone;
@property (nonatomic, copy) NSString * _Nonnull primaryTimeZoneOffset;
@property (nonatomic, copy) NSString * _Nonnull siteUrl;
@property (nonatomic, copy) NSString * _Nonnull supportCatchupTv;
@property (nonatomic, copy) NSString * _Nonnull supportFacebookLogin;
@property (nonatomic, copy) NSString * _Nonnull supportLivetv;
@property (nonatomic, copy) NSString * _Nonnull supportLivetvEpg;
@property (nonatomic, copy) NSString * _Nonnull supportMovies;
@property (nonatomic, copy) NSString * _Nonnull supportMultipleDisplayLanguages;
@property (nonatomic, copy) NSString * _Nonnull supportOtp;
@property (nonatomic, copy) NSString * _Nonnull supportPackages;
@property (nonatomic, copy) NSString * _Nonnull supportPayPerViewMovies;
@property (nonatomic, copy) NSString * _Nonnull supportSocialMediaSharing;
@property (nonatomic, copy) NSString * _Nonnull supportTvshows;
@property (nonatomic, copy) NSString * _Nonnull supportVideos;
@property (nonatomic, copy) NSString * _Nonnull tenantCode;
@property (nonatomic, copy) NSString * _Nonnull tenantLogo;
@property (nonatomic, copy) NSString * _Nonnull tenantName;
@property (nonatomic, copy) NSString * _Nonnull tenantSchema;
@property (nonatomic) NSInteger tvshowsTotalEpisodesMaxLimit;
@property (nonatomic) NSInteger videosMaxLimit;
@property (nonatomic, copy) NSString * _Nonnull welcomeVideoUrl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk10ClientInfo")
@interface ClientInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull versionNumber;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull server;
@property (nonatomic, copy) NSString * _Nonnull clientInfoDescription;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull params;
@property (nonatomic) NSInteger updateType;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk13CloseCaptions")
@interface CloseCaptions : YuppModel
@property (nonatomic, copy) NSArray<CCData *> * _Nonnull ccList;
@property (nonatomic, copy) NSString * _Nonnull defaultLang;
@property (nonatomic, copy) NSString * _Nonnull loadDefault;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<CCData *> * _Nonnull)ccListWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk6Config")
@interface Config : YuppModel
@property (nonatomic) BOOL isOTPSupported;
@property (nonatomic) BOOL isSocialMediaSharingSupported;
@property (nonatomic) BOOL isFacebookLoginSupported;
@property (nonatomic, copy) NSString * _Nonnull passwordRegEx;
@property (nonatomic, copy) NSString * _Nonnull siteURL;
@property (nonatomic) NSInteger maxOTPLength;
@property (nonatomic, copy) NSString * _Nonnull primaryTimeZone;
@property (nonatomic, copy) NSString * _Nonnull primaryTimeZoneOffset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end

@class LanguageSelectinoAttributes;
@class Language;
@class ResourceProfile;
@class Menu;

SWIFT_CLASS("_TtC6OTTSdk14ConfigResponse")
@interface ConfigResponse : YuppModel
@property (nonatomic, strong) ClientConfig * _Nonnull clientConfigs;
@property (nonatomic, strong) LanguageSelectinoAttributes * _Nonnull languageSelectionAttributes;
@property (nonatomic, copy) NSArray<Language *> * _Nonnull displayLanguages;
@property (nonatomic, strong) Config * _Nonnull configs;
@property (nonatomic, copy) NSArray<Language *> * _Nonnull contentLanguages;
@property (nonatomic, copy) NSArray<ResourceProfile *> * _Nonnull resourceProfiles;
@property (nonatomic, copy) NSArray<Menu *> * _Nonnull menus;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull rawData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Menu *> * _Nonnull)menusWithJson:(id _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
@end

@class DataRow;

SWIFT_CLASS("_TtC6OTTSdk7Content")
@interface Content : YuppModel
@property (nonatomic, copy) NSString * _Nonnull backgroundImage;
@property (nonatomic, copy) NSString * _Nonnull contentDescription;
@property (nonatomic, copy) NSArray<DataRow *> * _Nonnull dataRows;
@property (nonatomic, copy) NSString * _Nonnull posterImage;
@property (nonatomic, copy) NSString * _Nonnull title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC6OTTSdk7Country")
@interface Country : YuppModel
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) NSInteger isdCode;
@property (nonatomic, copy) NSString * _Nonnull iconUrl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Country *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end

@class Element;

SWIFT_CLASS("_TtC6OTTSdk7DataRow")
@interface DataRow : YuppModel
@property (nonatomic, copy) NSArray<Element *> * _Nonnull elements;
@property (nonatomic, copy) NSString * _Nonnull rowDataType;
@property (nonatomic) NSInteger rowNumber;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSNumber;

SWIFT_CLASS("_TtC6OTTSdk6Device")
@interface Device : YuppModel
@property (nonatomic, copy) NSString * _Nonnull boxId;
@property (nonatomic) NSInteger deviceId;
@property (nonatomic) BOOL isCurrentDevice;
@property (nonatomic, strong) NSNumber * _Nonnull loggedinTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Device *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk7Display")
@interface Display : YuppModel
@property (nonatomic, copy) NSString * _Nonnull subtitle1;
@property (nonatomic, copy) NSString * _Nonnull subtitle2;
@property (nonatomic, copy) NSString * _Nonnull subtitle3;
@property (nonatomic, copy) NSString * _Nonnull subtitle4;
@property (nonatomic, copy) NSString * _Nonnull subtitle5;
@property (nonatomic, copy) NSString * _Nonnull parentIcon;
@property (nonatomic, copy) NSString * _Nonnull parentName;
@property (nonatomic, copy) NSString * _Nonnull layout;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull imageUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk7Element")
@interface Element : YuppModel
@property (nonatomic, copy) NSString * _Nonnull elementSubtype;
@property (nonatomic, copy) NSString * _Nonnull contentCode;
@property (nonatomic, copy) NSString * _Nonnull data;
@property (nonatomic, copy) NSString * _Nonnull color;
@property (nonatomic, copy) NSString * _Nonnull bgColor;
@property (nonatomic) NSInteger id;
@property (nonatomic, copy) NSString * _Nonnull target;
@property (nonatomic) BOOL isClickable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class FilterItem;

SWIFT_CLASS("_TtC6OTTSdk6Filter")
@interface Filter : YuppModel
@property (nonatomic) BOOL selectableSortDirection;
@property (nonatomic, copy) NSArray<FilterItem *> * _Nonnull items;
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic) BOOL multiSelectable;
@property (nonatomic) BOOL isSort;
@property (nonatomic, copy) NSString * _Nonnull title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Filter *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk10FilterItem")
@interface FilterItem : YuppModel
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull image;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<FilterItem *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk6IpInfo")
@interface IpInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull city;
@property (nonatomic, copy) NSString * _Nonnull continentCode;
@property (nonatomic, copy) NSString * _Nonnull latitude;
@property (nonatomic, copy) NSString * _Nonnull continentName;
@property (nonatomic, copy) NSString * _Nonnull timezone;
@property (nonatomic, copy) NSString * _Nonnull trueIP;
@property (nonatomic, copy) NSString * _Nonnull country;
@property (nonatomic, copy) NSString * _Nonnull longitude;
@property (nonatomic, copy) NSString * _Nonnull postalCode;
@property (nonatomic, copy) NSString * _Nonnull countryCode;
@property (nonatomic, copy) NSString * _Nonnull region;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk8Language")
@interface Language : YuppModel
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Language *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk27LanguageSelectinoAttributes")
@interface LanguageSelectinoAttributes : YuppModel
@property (nonatomic) BOOL forceSelection;
@property (nonatomic) BOOL isMultiSelectable;
@property (nonatomic) BOOL isEmailVerified;
@property (nonatomic) BOOL maxSelectable;
@property (nonatomic) BOOL minSelectable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk21LocationAnalyticsInfo")
@interface LocationAnalyticsInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull authKey;
@property (nonatomic, copy) NSString * _Nonnull analyticsId;
@property (nonatomic, strong) NSNumber * _Nonnull serverTime;
@property (nonatomic, strong) NSNumber * _Nonnull hbRateInMillis;
@property (nonatomic, copy) NSString * _Nonnull collectorAPI;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end

@class ProductInfo;

SWIFT_CLASS("_TtC6OTTSdk20LocationinfoResponse")
@interface LocationinfoResponse : YuppModel
@property (nonatomic, strong) IpInfo * _Nonnull ipInfo;
@property (nonatomic, strong) ProductInfo * _Nonnull productInfo;
@property (nonatomic, strong) ClientInfo * _Nonnull clientInfo;
@property (nonatomic, strong) LocationAnalyticsInfo * _Nonnull analyticsInfo;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull rawData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end

@class PageContentResponse;
@class PageData;
@class StreamResponse;

SWIFT_CLASS("_TtC6OTTSdk19MediaCatalogManager")
@interface MediaCatalogManager : NSObject
/// Content page like for TVShows tab, Movies Tab …
/// \param path path from Tab response
///
/// \param onSuccess PageContentResponse object
///
/// \param onFailure APIError object
///
///
/// returns:
/// Void
- (void)pageContentWithPath:(NSString * _Nonnull)path onSuccess:(void (^ _Nonnull)(PageContentResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Get Cards for Continue Watching
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     payLoad: Array items list for continue watching
///   </li>
///   <li>
///     onSuccess: success
///   </li>
///   <li>
///     sectionsData : SectionData Array
///   </li>
///   <li>
///     onFailure: failed
///   </li>
///   <li>
///     error : APIError object
///   </li>
/// </ul>
///
/// returns:
/// Void
- (void)getCardsForContinueWatchingWithPayLoad:(NSDictionary<NSString *, id> * _Nonnull)payLoad onSuccess:(void (^ _Nonnull)(NSArray<PageData *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Get Stream information
/// \param path target Path
///
/// \param onSuccess Success
///
/// \param response successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)streamWithPath:(NSString * _Nonnull)path onSuccess:(void (^ _Nonnull)(StreamResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Get Encrypted Stream information
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     path : target Path
///   </li>
///   <li>
///     onSuccess: Success
///   </li>
///   <li>
///     response: successfull message
///   </li>
///   <li>
///     onFailure: Unsuccessfull request
///   </li>
///   <li>
///     error : APIError object
///   </li>
/// </ul>
///
/// returns:
/// Void
- (void)getEncryptedStreamWithPayLoad:(NSDictionary<NSString *, id> * _Nonnull)payLoad onSuccess:(void (^ _Nonnull)(StreamResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Search
/// \param query string from suggestions api
///
/// \param onSuccess Success
///
/// \param response PageContentResponse object
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)searchWithQuery:(NSString * _Nonnull)query onSuccess:(void (^ _Nonnull)(NSArray<Card *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Suggestions
/// \param query string to be searched
///
/// \param onSuccess Success
///
/// \param response String list
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)suggestionsWithQuery:(NSString * _Nonnull)query onSuccess:(void (^ _Nonnull)(NSArray<NSString *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk4Menu")
@interface Menu : YuppModel
@property (nonatomic, copy) NSString * _Nonnull menuDescription;
@property (nonatomic, copy) NSArray * _Nullable subMenus;
@property (nonatomic, copy) NSString * _Nonnull displayText;
@property (nonatomic) BOOL isClickable;
@property (nonatomic, copy) NSString * _Nonnull targetPath;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Menu *> * _Nonnull)menusWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk3OTP")
@interface OTP : YuppModel
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic) NSInteger referenceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end

@class UserManager;
@class PreferenceManager;
@class PaymentsManager;
@class StaticContentManager;

SWIFT_CLASS("_TtC6OTTSdk6OTTSdk")
@interface OTTSdk : NSObject
/// contains APIs like geo, config …
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AppManager * _Nonnull appManager;)
+ (AppManager * _Nonnull)appManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UserManager * _Nonnull userManager;)
+ (UserManager * _Nonnull)userManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MediaCatalogManager * _Nonnull mediaCatalogManager;)
+ (MediaCatalogManager * _Nonnull)mediaCatalogManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PreferenceManager * _Nonnull preferenceManager;)
+ (PreferenceManager * _Nonnull)preferenceManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PaymentsManager * _Nonnull paymentsManager;)
+ (PaymentsManager * _Nonnull)paymentsManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) StaticContentManager * _Nonnull staticContentManager;)
+ (StaticContentManager * _Nonnull)staticContentManager SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) API * _Nonnull api;)
+ (API * _Nonnull)api SWIFT_WARN_UNUSED_RESULT;
/// This function intializes the frame work with provided settings
/// <ul>
///   <li>
///     Usage :
///   </li>
/// </ul>
/// \code
/// YuppTVSDK.initWithSettings(settings: ["isLive":false, "logType" : 2,"requestTimeout" : 60])
///
/// \endcode\param settings optional <em>[String : Any]</em>  with predefined keys.
/// <ul>
///   <li>
///     isLive : Bool
///     <ul>
///       <li>
///         Default : true
///       </li>
///       <li>
///         Ex: isLive : true
///       </li>
///     </ul>
///   </li>
///   <li>
///     logType : Int
///     <ul>
///       <li>
///         0 : none (Default)
///       </li>
///       <li>
///         1: requestsOnly
///       </li>
///       <li>
///         2: requestAndHeaders
///       </li>
///       <li>
///         3: complete
///       </li>
///     </ul>
///     <ul>
///       <li>
///         Ex:  logType : 2
///       </li>
///     </ul>
///   </li>
///   <li>
///     requestTimeout : Double  //in seconds
///     <ul>
///       <li>
///         Default : Live
///       </li>
///       <li>
///         Ex:  requestTimeout : 60
///       </li>
///     </ul>
///   </li>
///   <li>
///     isEncryptionEnabled : Bool
///     <ul>
///       <li>
///         Default : true
///       </li>
///       <li>
///         Ex:  isEncryptionEnabled : false
///       </li>
///     </ul>
///   </li>
/// </ul>
///
///
/// returns:
/// Void
- (nonnull instancetype)initWithSettings:(NSDictionary<NSString *, id> * _Nullable)settings isSupported:(void (^ _Nonnull)(BOOL))isSupported OBJC_DESIGNATED_INITIALIZER;
+ (void)forceResetWithIsSupported:(void (^ _Nonnull)(BOOL))isSupported;
/// To refresh urls
/// \param isSuccess Bool
///
///
/// returns:
/// Void
+ (void)refreshWithIsSuccess:(void (^ _Nonnull)(BOOL))isSuccess;
/// CheckForUpdate
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     onSuccess: LocationinfoResponse object
///   </li>
///   <li>
///     onFailure : APIError
///   </li>
/// </ul>
///
/// returns:
/// Void
+ (void)checkForUpdateOnSuccess:(void (^ _Nonnull)(LocationinfoResponse * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// This function to know whether this app should be blocked or not
/// \param isSupported Bool
/// <ul>
///   <li>
///     true : allow
///   </li>
///   <li>
///     false : block
///   </li>
/// </ul>
///
///
/// returns:
/// Void
+ (void)isSupportedWithIsSupported:(void (^ _Nonnull)(BOOL))isSupported;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC6OTTSdk7Package")
@interface Package : YuppModel
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, strong) NSNumber * _Nonnull purchaseDate;
@property (nonatomic, strong) NSNumber * _Nonnull expiryDate;
@property (nonatomic, copy) NSString * _Nonnull packageType;
@property (nonatomic) NSInteger id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Package *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end

@class PageInfo;
@class PageEventInfo;
@class TabsInfo;
@class ShareInfo;
@class StreamStatus;

SWIFT_CLASS("_TtC6OTTSdk19PageContentResponse")
@interface PageContentResponse : YuppModel
@property (nonatomic, strong) PageInfo * _Nonnull info;
@property (nonatomic, copy) NSArray<Banner *> * _Nonnull banners;
@property (nonatomic, copy) NSArray<PageEventInfo *> * _Nonnull pageEventInfo;
@property (nonatomic) id _Nullable promoBanners;
@property (nonatomic, copy) NSArray<PageData *> * _Nonnull data;
@property (nonatomic, copy) NSArray<Filter *> * _Nonnull filters;
@property (nonatomic, strong) TabsInfo * _Nonnull tabsInfo;
@property (nonatomic, strong) ShareInfo * _Nonnull shareInfo;
@property (nonatomic, strong) StreamStatus * _Nonnull streamStatus;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk8PageData")
@interface PageData : YuppModel
@property (nonatomic) id _Nullable paneData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<PageData *> * _Nonnull)dataWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end

@class TargetParams;

SWIFT_CLASS("_TtC6OTTSdk13PageEventInfo")
@interface PageEventInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull targetPath;
@property (nonatomic, strong) TargetParams * _Nonnull targetParams;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<PageEventInfo *> * _Nonnull)pageEventInfoWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk8PageInfo")
@interface PageInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull path;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk15PaymentsManager")
@interface PaymentsManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class User;
@class NSMutableArray;

SWIFT_CLASS("_TtC6OTTSdk17PreferenceManager")
@interface PreferenceManager : NSObject
@property (nonatomic, copy) NSString * _Nonnull selectedLanguages;
/// These languages will be used only when user is not logged-in.
/// When user logged-in localLanguages will not be used. user?.preferences.lang will be used instead.
/// <ul>
///   <li>
///     localLanguages : comma separated Language codes.
///   </li>
/// </ul>
@property (nonatomic, copy) NSString * _Nonnull localLanguages;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull sessionId;)
+ (NSString * _Nonnull)sessionId SWIFT_WARN_UNUSED_RESULT;
+ (void)setSessionId:(NSString * _Nonnull)newValue;
@property (nonatomic, copy) NSString * _Nullable selectedDisplayLanguage;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull boxId;)
+ (NSString * _Nonnull)boxId SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) User * _Nullable user;
@property (nonatomic, strong) NSMutableArray * _Nullable userPrefferedLanguages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC6OTTSdk11ProductInfo")
@interface ProductInfo : YuppModel
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk15ResourceProfile")
@interface ResourceProfile : YuppModel
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic) BOOL isDefault;
@property (nonatomic, copy) NSString * _Nonnull urlPrefix;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<ResourceProfile *> * _Nonnull)resourceProfilesWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end

@class SectionInfo;
@class SectionData;
@class SectionControls;

SWIFT_CLASS("_TtC6OTTSdk7Section")
@interface Section : YuppModel
@property (nonatomic, strong) SectionInfo * _Nonnull sectionInfo;
@property (nonatomic, strong) SectionData * _Nonnull sectionData;
@property (nonatomic, strong) SectionControls * _Nonnull sectionControls;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk15SectionControls")
@interface SectionControls : YuppModel
@property (nonatomic) BOOL showViewAll;
@property (nonatomic, copy) NSString * _Nonnull viewAllTargetPath;
@property (nonatomic) BOOL infiniteScroll;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk11SectionData")
@interface SectionData : YuppModel
@property (nonatomic, copy) NSString * _Nonnull section;
@property (nonatomic, copy) NSArray<Card *> * _Nonnull data;
@property (nonatomic) NSInteger lastIndex;
@property (nonatomic) BOOL hasMoreData;
@property (nonatomic) NSInteger dataRequestDelay;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<SectionData *> * _Nonnull)sectionsDataListWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk11SectionInfo")
@interface SectionInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull sectionDescription;
@property (nonatomic, copy) NSString * _Nonnull dataSubType;
@property (nonatomic, copy) NSString * _Nonnull bannerImage;
@property (nonatomic) BOOL showLanguageFilter;
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic) NSInteger id;
@property (nonatomic) BOOL showGenreFilter;
@property (nonatomic, copy) NSString * _Nonnull dataType;
@property (nonatomic, copy) NSString * _Nonnull iconUrl;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk9ShareInfo")
@interface ShareInfo : YuppModel
@property (nonatomic, copy) NSString * _Nonnull shareDescription;
@property (nonatomic, copy) NSString * _Nonnull imageUrl;
@property (nonatomic) BOOL isSharingAllowed;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk20StaticContentManager")
@interface StaticContentManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk6Stream")
@interface Stream : YuppModel
@property (nonatomic) BOOL isDefault;
@property (nonatomic, copy) NSString * _Nonnull streamType;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, strong) CloseCaptions * _Nonnull closeCaptions;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Stream *> * _Nonnull)streamsWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk14StreamResponse")
@interface StreamResponse : YuppModel
@property (nonatomic) NSInteger count;
@property (nonatomic, copy) NSArray<Stream *> * _Nonnull streams;
@property (nonatomic, strong) AnalyticsInfo * _Nonnull analyticsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk12StreamStatus")
@interface StreamStatus : YuppModel
@property (nonatomic) BOOL hasAccess;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic) NSInteger seekPositionInMillis;
@property (nonatomic) NSInteger totalDurationInMillis;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk3Tab")
@interface Tab : YuppModel
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull sectionCodes;
@property (nonatomic) BOOL infiniteScroll;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Tab *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk8TabsInfo")
@interface TabsInfo : YuppModel
@property (nonatomic) BOOL showTabs;
@property (nonatomic, copy) NSString * _Nonnull hints;
@property (nonatomic, copy) NSArray<Tab *> * _Nonnull tabs;
@property (nonatomic, copy) NSString * _Nonnull selectedTab;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk12TargetParams")
@interface TargetParams : YuppModel
@property (nonatomic) BOOL autoRedirect;
@property (nonatomic, copy) NSString * _Nonnull buttonText;
@property (nonatomic) BOOL isDefault;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6OTTSdk11Transaction")
@interface Transaction : YuppModel
@property (nonatomic, copy) NSString * _Nonnull orderId;
@property (nonatomic, copy) NSString * _Nonnull packageName;
@property (nonatomic, strong) NSNumber * _Nonnull expiryTime;
@property (nonatomic) NSInteger amount;
@property (nonatomic, copy) NSString * _Nonnull status;
@property (nonatomic, copy) NSString * _Nonnull currency;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, strong) NSNumber * _Nonnull purchaseTime;
@property (nonatomic, copy) NSString * _Nonnull gateway;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)init:(NSDictionary<NSString *, id> * _Nonnull)json OBJC_DESIGNATED_INITIALIZER;
+ (NSArray<Transaction *> * _Nonnull)arrayWithJson:(id _Nullable)json SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6OTTSdk4User")
@interface User : YuppModel <NSCoding>
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull languages;
@property (nonatomic, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, copy) NSString * _Nonnull email;
@property (nonatomic) BOOL isEmailVerified;
@property (nonatomic) NSInteger status;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic) NSInteger userId;
@property (nonatomic) BOOL isPhoneNumberVerified;
@property (nonatomic, copy) NSArray * _Nonnull packages;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull rawData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC6OTTSdk11UserManager")
@interface UserManager : NSObject
/// SignIn With Password
/// \param loginId email or mobile or any other id like fb_token
///
/// \param appVersion Optional. App Version ex: 1.0
///
/// \param password valid Password
///
/// \param onSuccess Success
/// \code
/// * To access user details use : OTTSdk.preferenceManager.user
///
/// \endcode
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)signInWithPasswordWithLoginId:(NSString * _Nonnull)loginId password:(NSString * _Nonnull)password appVersion:(NSString * _Nullable)appVersion onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// SignIn With Otp
/// \param loginId email or mobile or any other id like fb_token
///
/// \param appVersion Optional. App Version ex: 1.0
///
/// \param otp valid otp
///
/// \param onSuccess Success
/// \code
/// * To access user details use : OTTSdk.preferenceManager.user
///
/// \endcode
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)signInWithOtpWithLoginId:(NSString * _Nonnull)loginId otp:(NSString * _Nonnull)otp appVersion:(NSString * _Nullable)appVersion onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Signup
/// \code
/// Required parameters: password
/// Optional parameters: Either email or mobile is required. remaining all are optional
///
///
/// \endcode\param email valid Email
///
/// \param mobile mobile number
///
/// \param password valid Password
///
/// \param appVersion App Version
///
/// \param referralType for future use
///
/// \param referralId for future use
///
/// \param onSuccess Success
/// \code
/// * To access user details use : OTTSdk.preferenceManager.user
///
///
/// \endcode
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)signupWithEmail:(NSString * _Nullable)email mobile:(NSString * _Nullable)mobile password:(NSString * _Nonnull)password appVersion:(NSString * _Nullable)appVersion referralType:(NSString * _Nullable)referralType referralId:(NSString * _Nullable)referralId onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// User Info
/// \param onSuccess Success
/// \code
/// * To access user details use : OTTSdk.preferenceManager.user
///
///
/// \endcode
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)userInfoOnSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// User Preference update
/// \param selectedLanguageCodes comma separated language codes. Ex: “TEL,TAM,HIN”
///
/// \param sendEmailNotification Email notification
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)updatePreferenceWithSelectedLanguageCodes:(NSString * _Nonnull)selectedLanguageCodes sendEmailNotification:(BOOL)sendEmailNotification onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Sign Out
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)signOutOnSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Resend OTP
/// \param referenceId Long (from get/otp or get/user/otp)
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)resendOTPWithReferenceId:(NSInteger)referenceId onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Verify Email
/// \param email valid email
///
/// \param otp valid otp
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)verifyEmailWithEmail:(NSString * _Nonnull)email otp:(NSInteger)otp onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Verify Mobile
/// \param mobile valid mobile
///
/// \param otp valid otp
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)verifyMobileWithMobile:(NSString * _Nonnull)mobile otp:(NSInteger)otp onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Update password
/// \code
/// Either email or mobile is required
///
/// \endcode\param mobile valid mobile
///
/// \param email valid email
///
/// \param password valid password
///
/// \param otp valid otp
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)updatePasswordWithEmail:(NSString * _Nullable)email mobile:(NSString * _Nullable)mobile password:(NSString * _Nonnull)password otp:(NSInteger)otp onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Change password
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     oldPassword : valid password
///   </li>
///   <li>
///     newPassword : new Password
///   </li>
///   <li>
///     onSuccess: Success
///   </li>
///   <li>
///     message: successfull message
///   </li>
///   <li>
///     onFailure: Unsuccessfull request
///   </li>
///   <li>
///     error : APIError object
///   </li>
/// </ul>
///
/// returns:
/// Void
- (void)changePasswordWithOldPassword:(NSString * _Nonnull)oldPassword newPassword:(NSString * _Nonnull)newPassword onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Linked Device List
/// \param onSuccess Success
///
/// \param devices Device array
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)linkedDeviceListOnSuccess:(void (^ _Nonnull)(NSArray<Device *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Delink Device
/// \param boxId 
///
/// \param deviceType 
///
/// \param onSuccess Success
///
/// \param message successfull message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)delinkDeviceWithBoxId:(NSString * _Nonnull)boxId deviceType:(NSInteger)deviceType onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// User Active Packages
/// \param onSuccess Success
///
/// \param packages Package array
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)activePackagesOnSuccess:(void (^ _Nonnull)(NSArray<Package *> * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
/// Session Preference
/// \param displayLangCode Display code from Config response
///
/// \param onSuccess Success
///
/// \param message Success Message
///
/// \param onFailure Unsuccessfull request
///
/// \param error APIError object
///
///
/// returns:
/// Void
- (void)sessionPreferenceWithDisplayLangCode:(NSString * _Nonnull)displayLangCode onSuccess:(void (^ _Nonnull)(NSString * _Nonnull))onSuccess onFailure:(void (^ _Nonnull)(APIError * _Nonnull))onFailure;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
